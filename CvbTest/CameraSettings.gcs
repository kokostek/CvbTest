;--------------------------------------------------------------------------
;               STEMMER IMAGING GenICam Settings File
;--------------------------------------------------------------------------
; Save date: 28.07.2021 11:05:39
; 
; ---- Device Information ----
; Vendor        : AT-Automation Technology GmbH
; Model         : C5-1280-GigE  (1280x1024)
; Version       : 1.1.2
; Firmware      : 1.1.2
; Serialnumber  : 21613200
; MAC-Address   : 70-B3-D5-02-82-63
;
; ---- Additional Configuration Information ----
; CamPort       : 0
; Username      : 21613200
; IP-Address    : 172.16.1.2
; Interface-MAC : B4-96-91-63-2A-FF
; RotateImage   : 0 Degree
; PixelFormat   : Raw (no Convert)
; NumBuffers    : 3
; Identification: MAC and IP-Address 
; DriverType    : FILTERDRIVER
; PacketSize    : -1
;--------------------------------------------------------------------------
Std::DeviceVendorName = "AT-Automation Technology GmbH"
Std::DeviceModelName = "C5-1280-GigE"
Std::DeviceManufacturerInfo = "PN 202 203 005"
Std::DeviceVersion = "1.1.2"
Std::DeviceSerialNumber = "21613200"
Std::DeviceFirmwareVersion = "1.2.5"
Cust::DeviceCVBLIC = "0x76f1d098"
Std::DeviceUserID = "21613200"
Std::DeviceScanType = "Linescan3D"
Std::DeviceRegistersValid = "1"
Std::DeviceTemperature[Std::DeviceTemperatureSelector(Mainboard)] = "37.475"
Std::DeviceTemperature[Std::DeviceTemperatureSelector(IOBoard)] = "45"
Std::DeviceMaxThroughput = "122683392"
Cust::DeviceAccessMode = "Standard"
Std::SensorWidth = "1280"
Std::SensorHeight = "1024"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_WND_SMALL)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_PLL_NOT_CLOCKED)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_PATTERN_FAILED)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_CAPTURE_FAILED)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_DISPERSION_HIGH)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(SERDES_HW_SMALL)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(FPN_OFFSET_CALIB_FAILED)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(FPN_GAIN_CALIB_FAILED)] = "0"
Cust::SensorStatus[Cust::SensorStatusSelector(BPR_LIST_IS_EMPTY)] = "0"
Std::SensorStatusAll = "0"
Std::Width = "1280"
Std::Height = "512"
Std::PixelFormat = "Mono16"
Std::ReverseX = "0"
Std::ReverseY = "0"
Std::OffsetX = "0"
Std::TestPattern[Std::TestPatternGeneratorSelector(Sensor)] = "Off"
Std::LinePitch = "2560"
Std::PixelDynamicRangeMin = "0"
Std::PixelDynamicRangeMax = "65535"
Std::AcquisitionMode = "Continuous"
Std::AcquisitionFrameCount = "1"
Cust::SensorFrameRateMax = "3597.84"
Std::AcquisitionFrameRate = "7.02703"
Std::AcquisitionLineRate = "3597.84"
Std::AcquisitionLineRateEnable = "0"
Std::AcquisitionStatus[Std::AcquisitionStatusSelector(AcquisitionTriggerWait)] = "0"
Std::AcquisitionStatus[Std::AcquisitionStatusSelector(AcquisitionActive)] = "0"
Std::AcquisitionStatus[Std::AcquisitionStatusSelector(AcquisitionTransfer)] = "0"
Std::AcquisitionStatus[Std::AcquisitionStatusSelector(FrameTriggerWait)] = "0"
Cust::AcquisitionMaxBufferedFrameCount = "3"
Std::MultiSlopeMode = "Off"
Std::ExposureMode = "Timed"
Std::ExposureTime = "150"
Cust::ExposureTimeReal = "150"
Cust::MaxNumAois = "4"
Cust::NumAois = "1"
Cust::ImageModeAoiSelector = "1"
Cust::AoiHeight[Cust::AoiSelector(1)] = "330"
Cust::AoiOffsetY[Cust::AoiSelector(1)] = "340"
Cust::AoiThreshold[Cust::AoiSelector(1)] = "540"
Cust::FIR = "1"
Cust::FIRMode = "Derivative"
Cust::FIRCoef = "SG9"
Cust::FIRGain = "1"
Cust::FIRC0 = "0"
Cust::FIRC1 = "0.0166667"
Cust::FIRC2 = "0.0333333"
Cust::FIRC3 = "0.05"
Cust::FIRC4 = "0.0666667"
Cust::CameraMode = "FIRPeak"
Cust::ProfilesPerFrame = "512"
Cust::AbsOffsetPos = "1"
Cust::NumSubPixel = "6"
Cust::TrshFirstZeroCrossing = "0"
Cust::MinThrshValidation = "1"
Cust::AoiTrackingEnable = "0"
Cust::AoiSearchEnable = "0"
Cust::AoiSearchMinNumPixel = "100"
Cust::AoiSearchHeight = "1024"
Cust::AoiSearchOffsetY = "0"
Cust::AoiSearchAlgorithm = "Mean"
Cust::AoiSearchAlgorithmOffset = "0"
Cust::ColRangeStart = "0"
Cust::ColRangeEnd = "1279"
Cust::SensorFrameCounter = "85208"
Cust::SensorFrameRateReal = "1093.41"
Cust::SensorReadoutTime = "277.044"
Cust::SensorGain = "Gain1"
Cust::AdcTargetOffset = "32"
Cust::VDR1 = "3.3"
Cust::VDR2 = "3.3"
Cust::VDR3 = "3.3"
Cust::VRSTH = "3.6"
Cust::VRST = "3.3"
Cust::VRSTB = "2.7"
Cust::VABL = "0.3"
Cust::BPR_CORRECTION = "1"
Cust::ADC_FPN_OFFSET_CORRECTION = "1"
Cust::ADC_FPN_GAIN_CORRECTION = "1"
Cust::FPN_COLUMN_CORRECTION = "0"
Cust::FPN_PROC_EN = "1"
Cust::SequencerFlags = "0xf5"
Cust::SequencerFlagsDec = "245"
Cust::PRSTNwidth = "166"
Cust::GlobalFlushWidth = "8"
Cust::MS_PRSTNwidth = "112"
Cust::EnableDC2 = "1"
Cust::EnableDC1 = "0"
Cust::EnableDC0 = "0"
Cust::EnableDC1TrshWidth = "0"
Cust::EnableDC1Option = "0"
Cust::EnableDC1Flags = "0"
Cust::EnableDC2TrshSP = "0"
Cust::LightControllerType[Std::LightControllerSelector(LightController0)] = "Generic"
Std::LightControllerSource[Std::LightControllerSelector(LightController0)] = "Off"
Cust::LightBrightnessControlMode[Std::LightControllerSelector(LightController0)] = "Analog"
Std::LightBrightness[Std::LightControllerSelector(LightController0)] = "100"
Cust::LightModulationVoltage[Std::LightControllerSelector(LightController0)] = "5"
Std::LightConnectionStatus[Std::LightControllerSelector(LightController0)] = "Ready"
Cust::Input1 = "Input1_Unused"
Cust::Input2 = "Input2_Unused"
Cust::Output1 = "Out1_IntegrationActive"
Cust::Output2 = "Out2_IntegrationActive"
Cust::Input1Level = "Input1Level_Low"
Cust::Input2Level = "Input2Level_Low"
Cust::RS422ChannelALevel = "RS422ChannelALevel_Low"
Cust::RS422ChannelBLevel = "RS422ChannelBLevel_High"
Cust::RS422ChannelZLevel = "RS422ChannelZLevel_High"
Cust::Output1MinPulseWidth = "1"
Cust::Output2MinPulseWidth = "1"
Cust::Output1Delay = "0"
Cust::Output2Delay = "0"
Cust::Output1Invert = "0"
Cust::Output2Invert = "0"
Cust::SequencerMode = "FreeRun"
Cust::ProfileTriggerMode = "EncoderResolverInterfaceRS422"
Cust::TriggerOverrun = "0"
Std::TriggerDivider = "40"
Cust::TriggerCoord = "0"
Cust::TriggerDirectionMode = "1"
Cust::TriggerReverseDirection = "0"
Cust::TriggerSingleChannelMode = "EnableIn1"
Cust::TriggerDividerLoadAtStart = "0"
Cust::ResetTriggerCoordZeroPos = "Off"
Cust::TriggerCoordinateCountAlways = "1"
Cust::UseAlternateResolverInputs = "0"
Cust::UseAlternateResolverInputsInverted = "0"
Std::PayloadSize = "1310788"
Std::GevVersionMajor = "1"
Std::GevVersionMinor = "1"
Std::GevDeviceModeIsBigEndian = "1"
Std::GevDeviceModeCharacterSet = "UTF8"
Cust::GevMACAddress[Std::GevInterfaceSelector(Interface_0)] = "0x70b3d5028263"
Std::GevSupportedIPConfigurationLLA[Std::GevInterfaceSelector(Interface_0)] = "1"
Std::GevSupportedIPConfigurationDHCP[Std::GevInterfaceSelector(Interface_0)] = "1"
Std::GevSupportedIPConfigurationPersistentIP[Std::GevInterfaceSelector(Interface_0)] = "1"
Std::GevCurrentIPConfigurationLLA[Std::GevInterfaceSelector(Interface_0)] = "1"
Std::GevCurrentIPConfigurationDHCP[Std::GevInterfaceSelector(Interface_0)] = "0"
Std::GevCurrentIPConfigurationPersistentIP[Std::GevInterfaceSelector(Interface_0)] = "1"
Std::GevCurrentIPAddress[Std::GevInterfaceSelector(Interface_0)] = "0xac100102"
Std::GevCurrentSubnetMask[Std::GevInterfaceSelector(Interface_0)] = "0xffffff00"
Std::GevCurrentDefaultGateway[Std::GevInterfaceSelector(Interface_0)] = "0xac100101"
Std::GevPersistentIPAddress[Std::GevInterfaceSelector(Interface_0)] = "0xac100102"
Std::GevPersistentSubnetMask[Std::GevInterfaceSelector(Interface_0)] = "0xffffff00"
Std::GevPersistentDefaultGateway[Std::GevInterfaceSelector(Interface_0)] = "0xac100101"
Std::GevLinkSpeed[Std::GevInterfaceSelector(Interface_0)] = "1000"
Std::GevIPConfigurationStatus[Std::GevInterfaceSelector(Interface_0)] = "PersistentIP"
Std::GevFirstURL = "Local:CX-1280_GigE_1.2.5.zip;8C400904;8F03"
Std::GevSecondURL = "http://www.automationtechnology.de/genicam/CX-1280_GigE_1.2.5.zip"
Std::GevNumberOfInterfaces = "1"
Std::GevMessageChannelCount = "1"
Std::GevStreamChannelCount = "1"
Std::GevSupportedOptionalCommandsUserDefinedName = "1"
Std::GevSupportedOptionalCommandsSerialNumber = "1"
Std::GevSupportedOptionalCommandsEVENTDATA = "0"
Std::GevSupportedOptionalCommandsEVENT = "1"
Std::GevSupportedOptionalCommandsPACKETRESEND = "1"
Std::GevSupportedOptionalCommandsWRITEMEM = "1"
Std::GevSupportedOptionalCommandsConcatenation = "1"
Std::GevHeartbeatTimeout = "3000"
Std::GevGVCPHeartbeatDisable = "0"
Std::GevGVCPPendingAck = "1"
Std::GevGVCPPendingTimeout = "500"
Std::GevTimestampTickFrequency = "100000000"
Std::GevTimestampValue = "0"
Cust::GevSCPInterfaceIndex[Cust::GevStreamChannelSelector(0)] = "0"
Cust::GevSCPSPacketSize[Cust::GevStreamChannelSelector(0)] = "1500"
Cust::GevSCPD[Cust::GevStreamChannelSelector(0)] = "0"
Std::UserSetDefaultSelector = "UserSet1"
Std::ChunkModeActive = "1"
Cust::ChunkModeSelector = "OneChunkPerFrame"
Std::ChunkEnable[Std::ChunkSelector(OffsetX)] = "1"
Std::ChunkEnable[Std::ChunkSelector(OffsetY)] = "1"
Std::ChunkEnable[Std::ChunkSelector(Height)] = "1"
Std::ChunkEnable[Std::ChunkSelector(Timestamp)] = "1"
Std::ChunkEnable[Std::ChunkSelector(LineStatusAll)] = "1"
Std::ChunkEnable[Std::ChunkSelector(Framecounter)] = "1"
Std::ChunkEnable[Std::ChunkSelector(EncoderValue)] = "1"
Std::EventNotification[Std::EventSelector(AcquisitionStart)] = "Off"
Std::EventNotification[Std::EventSelector(AcquisitionEnd)] = "Off"
Std::EventNotification[Std::EventSelector(AcquisitionTransferStart)] = "Off"
Std::EventNotification[Std::EventSelector(AcquisitionTransferEnd)] = "Off"
Std::EventNotification[Std::EventSelector(AoiTrackingStart)] = "Off"
Std::EventNotification[Std::EventSelector(AoiTrackingEnd)] = "Off"
Std::EventNotification[Std::EventSelector(AoiSearchFailed)] = "Off"
Std::EventNotification[Std::EventSelector(AutoStartTrigger)] = "Off"
Std::EventAcquisitionStart = "0x9012"
Std::EventAcquisitionEnd = "0x9013"
Std::EventAcquisitionTransferStart = "0x9014"
Std::EventAcquisitionTransferEnd = "0x9015"
Cust::EventAoiTrackingStart = "0x9016"
Cust::EventAoiTrackingEnd = "0x9017"
Cust::EventAoiSearchFailedEnd = "0x9018"
Cust::EventAutoStartTriggerEnd = "0x9019"
Std::FileAccessLength[Std::FileOperationSelector(Open)] = "4096"
Std::FileAccessLength[Std::FileOperationSelector(Close)] = "4096"
Std::FileAccessLength[Std::FileOperationSelector(Read)] = "4096"
Std::FileAccessLength[Std::FileOperationSelector(Write)] = "4096"
Std::FileAccessLength[Std::FileOperationSelector(Delete)] = "4096"
Std::FileAccessOffset[Std::FileOperationSelector(Open)] = "0"
Std::FileAccessOffset[Std::FileOperationSelector(Close)] = "0"
Std::FileAccessOffset[Std::FileOperationSelector(Read)] = "0"
Std::FileAccessOffset[Std::FileOperationSelector(Write)] = "0"
Std::FileAccessOffset[Std::FileOperationSelector(Delete)] = "0"
Std::FileOperationStatus[Std::FileOperationSelector(Open)] = "Success"
Std::FileOperationStatus[Std::FileOperationSelector(Close)] = "Success"
Std::FileOperationStatus[Std::FileOperationSelector(Read)] = "Success"
Std::FileOperationStatus[Std::FileOperationSelector(Write)] = "Success"
Std::FileOperationStatus[Std::FileOperationSelector(Delete)] = "Success"
Std::FileOperationResult[Std::FileOperationSelector(Open)] = "0"
Std::FileOperationResult[Std::FileOperationSelector(Close)] = "0"
Std::FileOperationResult[Std::FileOperationSelector(Read)] = "0"
Std::FileOperationResult[Std::FileOperationSelector(Write)] = "0"
Std::FileOperationResult[Std::FileOperationSelector(Delete)] = "0"
Std::FileOpenMode[Std::FileSelector(UserData)] = "Read"
Std::FileOpenMode[Std::FileSelector(ColStatisticBits)] = "Read"
Std::FileOpenMode[Std::FileSelector(ChannelData)] = "Read"
Std::FileOpenMode[Std::FileSelector(BPRData)] = "Read"
Std::FileOpenMode[Std::FileSelector(CalibrationFactory)] = "Read"
Std::FileOpenMode[Std::FileSelector(CalibrationUser)] = "Read"
Std::FileSize[Std::FileSelector(UserData)] = "4096"
Std::FileSize[Std::FileSelector(ColStatisticBits)] = "160"
Std::FileSize[Std::FileSelector(ChannelData)] = "0"
Std::FileSize[Std::FileSelector(BPRData)] = "124"
Std::FileSize[Std::FileSelector(CalibrationFactory)] = "0"
Std::FileSize[Std::FileSelector(CalibrationUser)] = "0"
ele
